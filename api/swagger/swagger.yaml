swagger: 2.0
info:
  version: "0.0.1"
  title: glh 'ideal' open API 
# during dev, should point to your local machine
host: api.glhhotels.com
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-volos-resources: {}
paths:
<<<<<<< HEAD
  /availability:
=======
  /brands/{brandName}:
    # binds a127 app logic to a route
    x-swagger-router-controller: brandsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of brand names and descriptions.
      # used as the method name of the controller
      operationId: getBrands
      parameters:
        - name: brandName
          in: path
          description: An individual brand name. Add to limit the response to a single specific brand.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: BrandsResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /brands/{brandName}/resorts/:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of resorts that belong to the brand {brandName}.
      # used as the method name of the controller
      operationId: getBrandResorts
      parameters:
        - name: brandName
          in: path
          description: An individual brand name. 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /preferences/{preferenceCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: preferences
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of preference codes and descriptions
      # used as the method name of the controller
      operationId: getPreferences
      parameters:
        - name: preferenceCode
          in: path
          description: An individual preference code. Add to limit the response to a single specific preference.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: PreferencesResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
  /resorts/{resortCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of resort names and descriptions.
      # used as the method name of the controller
      operationId: getResorts
      parameters:
        - name: resortCode
          in: path
          description: An individual resort code. Add to limit the response to a single specific resort.
          required: false
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /resorts/{resortCode}/rooomtypes/:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of room type names and attributes for a given resort {resortCode}.
      # used as the method name of the controller
      operationId: getRoomTypes
      parameters:
        - name: resortCode
          in: path
          description: An individual resort code.
          required: true
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RoomTypesResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /roomtypes/{roomTypeCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: roomTypesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of room type codes  and room type attributes.
      # used as the method name of the controller
      operationId: getRoomTypes
      parameters:
        - name: roomTypeCode
          in: path
          description: An individual room type code. Add to limit the response to a single specific room type.
          required: false
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
        - name: classification
          in: query
          description: Specifies the room type classification e.g. Sleeping or Function
          required: false
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RoomTypesResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /specialRequests/{specialRequestCode}:
>>>>>>> d351965f1d68fe86b5487d2b22cd6d25bbfdc008
    # binds a127 app logic to a route
    x-swagger-router-controller: availabilityController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
<<<<<<< HEAD
      description: Returns the collection of rooms availabe and applicable rates.
      # used as the method name of the controller
      operationId: getAgents
      parameters:
        - name: resortCode
          in: query
          description: A resort code to be used for the availability request.
          required: true
          type: string
        - name: startDate
          in: query
          description: Start date for the availability request
          required: true
          type: string
        - name: endDate
          in: query
          description: End date for the availability request
          required: true
          type: string
        - name: noAdults
          in: query
          description: Number of Adults for the availability request
          required: true
          type: string
        - name: noChildren
          in: query
          description: Number of Children for the availability request
          required: true
          type: string
        - name: rateCode
          in: query
          description: Rate code to be used for the availability request
          required: false
          type: string    
        - name: promoCode
          in: query
          description: Promotional code to be used for the availability request
          required: false
          type: string   
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: AvailabilityGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /agents/{agentId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: agentsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of agent codes and associated attributes.
      # used as the method name of the controller
      operationId: getAgents
      parameters:
        - name: agentId
          in: path
          description: An individual agent ID. Add to limit the response to a single specific agent.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: AgentsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /agents/{agentId}/customers/:
    # binds a127 app logic to a route
    x-swagger-router-controller: customersController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of customer names and attributes that are linked to the given agent.
      # used as the method name of the controller
      operationId: getCustomersByAgent
      parameters:
        - name: agentId
          in: path
          description: An agent ID.
          required: true
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /agents/{agentId}/ratecodes/:
    # binds a127 app logic to a route
    x-swagger-router-controller: rateCodesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of rate codes and attributes that are linked to the given agent.
      # used as the method name of the controller
      operationId: getRateCodesByAgent
      parameters:
        - name: agentId
          in: path
          description: An agent ID.
          required: true
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RateCodesGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /amenities/{amenityCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: amenitiesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of amenities and associated attributes.
      # used as the method name of the controller
      operationId: getAmeneties
      parameters:
        - name: amenityCode
          in: path
          description: An individual amenity code - Limits the response to a single specific amenity.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: AmenitiesGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /amenities/{amenityCode}/resorts/:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of resorts that provide the specified amenity.
      # used as the method name of the controller
      operationId: getResortsByAmenity 
      parameters:
        - name: amenityCode
          in: path
          description: An individual amenity code. 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /attractions/{attractionCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: attractionsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of attractions and associated attributes.
      # used as the method name of the controller
      operationId: getAttractions
      parameters:
        - name: attractionCode
          in: path
          description: An individual attraction code. Limits the response to a single specific attraction.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: AttractionsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /attractions/{attractionCode}/resorts/:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of resorts that are linked to the specified attraction.
      # used as the method name of the controller
      operationId: getResortsByAttraction 
      parameters:
        - name: attractionCode
          in: path
          description: An individual attraction code. 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /brands/{brandName}:
    # binds a127 app logic to a route
    x-swagger-router-controller: brandsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of brand names and descriptions.
      # used as the method name of the controller
      operationId: getBrands
      parameters:
        - name: brandName
          in: path
          description: An individual brand name. Add to limit the response to a single specific brand.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: BrandsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /brands/{brandName}/resorts/:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of resorts that belong to the brand {brandName}.
      # used as the method name of the controller
      operationId: getResortsByBrand 
      parameters:
        - name: brandName
          in: path
          description: An individual brand name. 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /customers/{customerID}:
    # binds a127 app logic to a route
    x-swagger-router-controller: customersController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a customer and associated attributes.
      # used as the method name of the controller
      operationId: getCustomers
      parameters:
        - name: customerID
          in: path
          description: An individual customer ID.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: CustomersGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /guests/{guestId}:
    # binds a127 app logic to a route
    x-swagger-router-controller: guestsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a guest and associated attributes.
      # used as the method name of the controller
      operationId: getGuests
      parameters:
        - name: guestId
          in: path
          description: An individual guest ID. Limits the response to a single specific guest.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: GuestsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /locations/{locationCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: locationsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of locations and associated attributes.
      # used as the method name of the controller
      operationId: getLocations
      parameters:
        - name: locationCode
          in: path
          description: An individual location code. Limits the response to a single specific location.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: LocationsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /locations/{locationCode}/resorts/:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of resort names and attributes that are linked to the given location.
      # used as the method name of the controller
      operationId: getResortsByLocation
      parameters:
        - name: locationCode
          in: path
          description: An individual location code.
          required: true
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /preferences/{preferenceCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: preferencesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of preference codes and descriptions
      # used as the method name of the controller
      operationId: getPreferences
      parameters:
        - name: preferenceCode
          in: path
          description: An individual preference code. Add to limit the response to a single specific preference.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: PreferencesGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
  /reservations/{reservationsCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: reservationsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a single specific reservation and it's attributes
      # used as the method name of the controller
      operationId: getReservation
      parameters:
        - name: reservationCode
          in: path
          description: An individual reservation code. 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ReservationsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
    post:
      description: Create a new reservation and returns the reservation confirmation code.
      # used as the method name of the controller
      operationId: postReservation
      parameters:
        - name: reservationDetails
          in: body
          description: Details of the reservation to be made. 
          required: true
          schema:
            $ref: ReservationsPostRequest
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ReservationsPostResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
    delete:
      description: Logical cancellation of an existing reservation.
      # used as the method name of the controller
      operationId: postReservation
      parameters:
        - name: reservationsCode
          in: path
          description: Confirmation code of the reservation to be cancelled. 
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ReservationsDeleteResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
  /ratecodes/{rateCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: rateCodesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of rate codes and attributes
      # used as the method name of the controller
      operationId: getRateCodes
      parameters:
        - name: rateCode
          in: path
          description: An individual rate code. Add to limit the response to a single specific rate code.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RateCodesGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
  /ratedetails/{rateDetailsCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: rateDetailsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of rate details and attributes
      # used as the method name of the controller
      operationId: getRateDetails
      parameters:
        - name: rateDetailsID
          in: path
          description: An individual rate detail. Add to limit the response to a single specific rate detail.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RateDetailsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse 
  /resorts/{resortCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: resortsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of resort names and descriptions.
      # used as the method name of the controller
      operationId: getResorts
      parameters:
        - name: resortCode
          in: path
          description: An individual resort code. Add to limit the response to a single specific resort.
          required: false
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: ResortsGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /resorts/{resortCode}/rooomtypes/:
    # binds a127 app logic to a route
    x-swagger-router-controller: roomTypesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a collection of room type names and attributes for a given resort {resortCode}.
      # used as the method name of the controller
      operationId: getRoomTypes
      parameters:
        - name: resortCode
          in: path
          description: An individual resort code.
          required: true
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RoomTypesGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /roomtypes/{roomTypeCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: roomTypesController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns the collection of room type codes  and room type attributes.
      # used as the method name of the controller
      operationId: getRoomTypes
      parameters:
        - name: roomTypeCode
          in: path
          description: An individual room type code. Add to limit the response to a single specific room type.
          required: false
          type: string
        - name: fields
          in: query
          description: Specifies that a partial response is request and lists the resort repsonse fields to include (comma separated list)
          required: false
          type: string
        - name: classification
          in: query
          description: Specifies the room type classification e.g. Sleeping or Function
          required: false
          type: string        
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: RoomTypesGetResponse
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
  /specialRequests/{specialRequestCode}:
    # binds a127 app logic to a route
    x-swagger-router-controller: specialRequestsController
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
=======
>>>>>>> d351965f1d68fe86b5487d2b22cd6d25bbfdc008
      description: Returns the collection of  special request codes and descriptions
      # used as the method name of the controller
      operationId: getSpecialRequests
      parameters:
        - name: specialRequestCode
          in: path
          description: An individual special request code. Add to limit the response to a single specific special request 
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
<<<<<<< HEAD
            $ref: SpecialRequestsGetResponse
=======
            $ref: SpecialRequestsResponse
>>>>>>> d351965f1d68fe86b5487d2b22cd6d25bbfdc008
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: StatusResponse
# complex objects have schema definitions

definitions:

#
# A set of complex data definitions primarily for describing the data
# returned by the API operations
# 
# The structure of each operation response is similar, like
#
# RESPONSE_OBJECT
#   STATUS_RESPONSE
#   ARRAY OF OBJECT_DETAILS
#
# OBJECT_DETAILS are detrminiedd by the operatin itself
#

###################################################################################
#       Status Model                                                              #
###################################################################################

# A generic status object which containsthe outcome of an operation 
# and pointers to further unformation
# 
# Apart from a code and additional descriptive text, there is the 
# option of providing a further
# set of links for additional calls for further details
#
# Status Response is included in all operation responses as part of a complex object
#
  StatusResponse:
    required:
      - statusCode
      - statusDetails
    properties:
      statusCode:
        type: string
      statusDetails:
        type: string
      moreInfo:
        type: array
        items: {"label": string, "link": string}

###################################################################################
#       Brand Model
#
#       Response, Details
###################################################################################

  BrandsResponse:
    required:
      - status
      - list
    properties:
      status:
        type: object
        $ref: StatusResponse
      list:
        type: array
        items: {"object": "BrandDetail"}
        
  BrandDetail:
    required:
      - brandName
      - brandDescription
    properties:
      brandName:
        type: string
      brandDescription:
        type: string

###################################################################################
#       Preference model   
#
###################################################################################

  PreferenceDetails:
    required:
      - preferenceType
      - preferenceValue
    properties:
      preferenceTyoe:
        type: string
      preferenceDescription:
        type: string
      preferenceValue:
        type: string
      preferenceNotes:
        type: string
        
  PreferencesResponse:
    required:
      - status
      - list
    properties:
      status:
        type: object
        $ref: StatusResponse
      list:
        type: array
        items: {"object": "PreferenceDetails"}
 
###################################################################################
#       Reservation Model
##################################################################################
      
        
 
###################################################################################
#       Resorts model                                                             #
###################################################################################
 
  ResortDetails:
    required:
      - resortCode
      - resortShortDescription
    properties:
      resortCode:
        type: string
      resortShortDescription:
        type: string
      resortDescription:
        type: string
      address:
        type: string
      geocode:
        type: string
      contactDetails:
        type: array
        items: {"contactType": "string", "contactValue": "string"}
      cityName:
        type: string
      businessCentreName:
        type: string
      languages:
        type: array
        items: {"language": "string"}
      currency:
        type: array
        items: {"currency": "string"}
      websiteURL:
        type: string # in valid URL format
      
  ResortsResponse:
    required:
      - status
      - list
    properties:
      status:
        type: object
        $ref: StatusResponse
      list:
        type: array
        items: {"object": "ResortDetails"}
        
###################################################################################
#       Room Types model                                                          #
###################################################################################
  RoomFacility:
    required:
      - facilityCode
      - facilityName
    properties:
      facilityCode:
        type: string
      facilityName:
        type: string
      facilityDescription:
        type: string
  
  RoomTypeDetail:
    required:
      - roomTypeCode
      - roomTypeName
    properties:
      roomTypeCode: 
        type: string
      roomTypeName:
        type: string
      roomCategory:
        type: string
      roomFacilities:
        type: array
        items: {"object": "RoomFacility"} 
  
  RoomTypesResponse:
    required:
      - status
      - list
    properties:
      status:
        type: object
        $ref: StatusResponse
      list:
        type: array
        items: {"object": "RoomTypeDetail"}
        
###################################################################################
#       Special Request model                                                          #
##################################################################################
  
  SpecialRequestDetail:
    required:
      - code
      - description
    properties:
      code: 
        type: string
      description: 
        type: string
<<<<<<< HEAD
  SpecialRequestsGetResponse:
=======
 
  SpecialRequestsResponse:
>>>>>>> d351965f1d68fe86b5487d2b22cd6d25bbfdc008
    required:
      - status
      - list
    properties:
      status:
        type: object
        $ref: StatusResponse
      list:
        type: array
        items: {"object": "SpecialRequestDetail"}
<<<<<<< HEAD
  PreferencesGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  ResortsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  RoomTypesGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  BrandsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  CustomersGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  AgentsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  GuestsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  RateCodesGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  RateDetailsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  AvailabilityGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  LocationsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  AttractionsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  AmenitiesGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  ReservationsGetResponse:
    required:
      - status
    properties:
      status:
        type: string
  ReservationsPostResponse:
    required:
      - status
    properties:
      status:
        type: string
  ReservationsPostRequest:
    required:
      - status
    properties:
      status:
        type: string
  ReservationsDeleteResponse:
    required:
      - status
    properties:
      status:
        type: string
=======
>>>>>>> d351965f1d68fe86b5487d2b22cd6d25bbfdc008
